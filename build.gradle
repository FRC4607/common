plugins {
    id "java"
    id "edu.wpi.first.GradleRIO"
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

// Set this to true to enable desktop support.
def includeDesktopSupport = true

// Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.
// Also defines JUnit 4.
dependencies {
    implementation wpi.deps.wpilib()
    nativeZip wpi.deps.wpilibJni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.wpilibJni(wpi.platforms.desktop)


    implementation wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

    testImplementation 'junit:junit:4.12'

    // Enable simulation gui support. Must check the box in vscode to enable support
    // upon debugging
    simulation wpi.deps.sim.gui(wpi.platforms.desktop, false)
    simulation wpi.deps.sim.driverstation(wpi.platforms.desktop, false)

    // Websocket extensions require additional configuration.
    // simulation wpi.deps.sim.ws_server(wpi.platforms.desktop, false)
    // simulation wpi.deps.sim.ws_client(wpi.platforms.desktop, false)

    // Add Log4J2, for logging
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'

    // Add LMAX Disruptor, to enable async in Log4J2
    implementation 'com.lmax:disruptor:3.4.4'


    // Add CommonsCSV for testing of log files.
    compile 'org.apache.commons:commons-csv:1.9.0'
}

test {
   useJUnit()
   systemProperty "log4j2.debug", true
}